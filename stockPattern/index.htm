<html>
  <head>
    <title>股價線圖辨識</title>
    <script type="text/javascript" src="jquery-1.11.0.min.js"></script>
    <!-- Load c3.css -->
    <link href="c3.css" rel="stylesheet">
    <!-- Load d3.js and c3.js -->
    <script src="d3.v3.min.js" charset="utf-8"></script>
    <script src="c3.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=0.6">

  </head>
  <body bgcolor="#ccccff">
    tes puh

    <canvas width="500" height="300" id="myCanvas" style="border:1px solid;position:absolute;top:50;left:100;"></canvas>
    <div id="buttons" style="position:absolute;top:360;left:100;width:500">
      <center>
        <input type="button" id="redraw" value="重新繪製">
        <input type="button" id="search" value="搜尋">
        <br/><br/>
        <p>
        Online service to recognize any chart patterns that you can imagine; otherwise machine will learn a new one:-)
        </p>
        <p>
        How to use it? Simply draw any chart such as a V or W shape, then press the search bottom. It may take few seconds to select the mostly likely segment from our database of stock prices.</p>
        <p>
        如何使用：在上面白色的區塊用滑鼠畫個型態(M頭、W底、cup and handle、...)，系統就會幫你搜尋，反應時間約三到五秒
        </p>
        <div id="result" style="border:1px solid">
          <div id="chart0"></div><br/>
          <div id="chart1"></div><br/>
          <div id="chart2"></div><br/>
          <div id="chart3"></div><br/>
          <div id="chart4"></div><br/>
        </div>
        <br/><br/>
        Special Thanks: 韓傳祥 教授, 王崇喆 博士, Eugene Yang 博士生, 陳重吉 博士生, 陳彥安
        <br/><br/>
      </center>
    </div>

    <script>
      var canvas = document.getElementById("myCanvas"); // 取得物件
      var ctx = canvas.getContext("2d"); // 取得繪圖環境
      var drawMode, mx, my;
      w = 500;
      h = 300;

      window.onload = function(){
        newLeft = Math.max(1, (window.innerWidth-canvas.width)/2);
        canvas.style.left = newLeft + 'px';
        document.getElementById("buttons").style.left = canvas.style.left;
        ctx.fillStyle = "#fff"; // 用以填滿的色彩(以CSS語法指定色彩)。
        ctx.fillRect(0, 0, w, h);
      }

window.onresize = function(){
  newLeft = Math.max(1, (window.innerWidth-canvas.width)/2);
  canvas.style.left = newLeft + 'px';
  document.getElementById("buttons").style.left = canvas.style.left;
}

canvas.onmousedown = function(ev){
  ctx.beginPath();
  ctx.strokeStyle = "#000";
  ctx.lineWidth = 1;
  mx = event.clientX - parseInt(canvas.style.left) + window.pageXOffset;
  my = event.clientY - parseInt(canvas.style.top) + window.pageYOffset;
  ctx.moveTo(mx, my);
  drawMode = true;
}

canvas.onmousemove = function(ev){
  if(drawMode){
    mx = event.clientX - parseInt(canvas.style.left) + window.pageXOffset;
    my = event.clientY - parseInt(canvas.style.top) + window.pageYOffset;
    ctx.lineTo(mx, my);
    ctx.stroke();
  }
}

canvas.onmouseup = function(){
  drawMode = false;
}

// Set up touch events for mobile, etc
canvas.addEventListener("touchstart", function (e) {
  mousePos = getTouchPos(canvas, e);
  var touch = e.touches[0];
  var mouseEvent = new MouseEvent("mousedown", {
    clientX: touch.clientX,
    clientY: touch.clientY
  });
  canvas.dispatchEvent(mouseEvent);
}, false);
canvas.addEventListener("touchend", function (e) {
  var mouseEvent = new MouseEvent("mouseup", {});
  canvas.dispatchEvent(mouseEvent);
}, false);
canvas.addEventListener("touchmove", function (e) {
  var touch = e.touches[0];
  var mouseEvent = new MouseEvent("mousemove", {
    clientX: touch.clientX,
    clientY: touch.clientY
  });
  canvas.dispatchEvent(mouseEvent);
}, false);

// Prevent scrolling when touching the canvas
document.body.addEventListener("touchstart", function (e) {
  if (e.target == canvas) {
    e.preventDefault();
  }
}, false);
document.body.addEventListener("touchend", function (e) {
  if (e.target == canvas) {
    e.preventDefault();
  }
}, false);
document.body.addEventListener("touchmove", function (e) {
  if (e.target == canvas) {
    e.preventDefault();
  }
}, false);

// Get the position of a touch relative to the canvas
function getTouchPos(canvasDom, touchEvent) {
  var rect = canvasDom.getBoundingClientRect();
  return {
    x: touchEvent.touches[0].clientX - rect.left,
    y: touchEvent.touches[0].clientY - rect.top
  };
}

document.getElementById("redraw").onclick = function(){
  ctx.fillStyle = "#fff"; // 用以填滿的色彩(以CSS語法指定色彩)。
  ctx.fillRect(0, 0, w, h);
}

document.getElementById("search").onclick = function(){
  var imgObj = ctx.getImageData(0, 0, w, h);
  var mat = new Array(w);
  var arr = new Array(w);
  var qs = '';
  // Obj to mat
  for(k=0;k<imgObj.data.length;k+=4){
    i = Math.floor((k/4)/w);
    j = (k/4)%w;
    if(mat[j]==undefined){
      mat[j] = new Array(h);
    }
    mat[j][i] = Math.round((imgObj.data[k]+imgObj.data[k+1]+imgObj.data[k+2])/3);
  }
  // Find min idx
  for(i=0;i<w;i++){
    idx = mat[i].indexOf(Math.min(...mat[i]));
    if(idx!=0){
      qs += (h-idx) + '.';
    }
  }
  // Request
  $.get(
      "search.php",
      "qs=" + qs,
      function(responseStr){
        console.log(responseStr);
        retResult = JSON.parse(responseStr)
          for(i=0;i<5;i++){
            retResult[i]['price'].unshift('Price (' + retResult[i]['name'] + ', ' + retResult[i]['startTime'] + ', ' + retResult[i]['dur'] + ')')
                retResult[i]['pattern'].unshift('pattern')
                var chart = c3.generate({
                  bindto: '#chart' + i,
                  data: {
                    columns: [
                      retResult[i]['price'],
                      retResult[i]['pattern']
                    ]
                  },
                });
                }
                }
                );
}

/**
  document.getElementById("save").onclick = function(){
  window.open(ctx.canvas.toDataURL('img/png'));
  }**/
    </script>

  </body>
</html>

